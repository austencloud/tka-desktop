{
  "timestamp": "2025-06-14T14:39:48.690250",
  "total_duration": 2.430828094482422,
  "results": {
    "scaffolding": {
      "status": "failed",
      "duration": 0.45400571823120117,
      "stdout": null,
      "stderr": "mainloop: caught unexpected SystemExit!\n",
      "returncode": 3
    },
    "specification": {
      "status": "failed",
      "duration": 0.5711116790771484,
      "stdout": "============================= test session starts =============================\nplatform win32 -- Python 3.12.2, pytest-8.3.4, pluggy-1.5.0 -- C:\\Python312\\python.exe\ncachedir: .pytest_cache\nPyQt6 6.9.1 -- Qt runtime 6.9.1 -- Qt compiled 6.9.0\nrootdir: F:\\CODE\\TKA\\tka-desktop\\modern\\tests\nconfigfile: pytest.ini\nplugins: anyio-4.8.0, cov-6.1.1, mock-3.14.0, qt-4.4.0, sugar-1.0.0\ncollecting ... collected 26 items / 1 error / 15 deselected / 11 selected\n\n=================================== ERRORS ====================================\n_ ERROR collecting specification/presentation/test_graph_editor_legacy_parity.py __\nImportError while importing test module 'F:\\CODE\\TKA\\tka-desktop\\modern\\tests\\specification\\presentation\\test_graph_editor_legacy_parity.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\nv2\\tests\\specification\\presentation\\test_graph_editor_legacy_parity.py:9: in <module>\n    from PyQt6.QtCore import QSignalSpy, Qt\nE   ImportError: cannot import name 'QSignalSpy' from 'PyQt6.QtCore' (C:\\Python312\\Lib\\site-packages\\PyQt6\\QtCore.pyd)\n============================== warnings summary ===============================\nv2\\tests\\specification\\domain\\test_graph_editor_implementation.py:81\n  F:\\CODE\\TKA\\tka-desktop\\modern\\tests\\specification\\domain\\test_graph_editor_implementation.py:81: PytestCollectionWarning: cannot collect test class 'TestWindow' because it has a __init__ constructor (from: specification/domain/test_graph_editor_implementation.py)\n    class TestWindow(QMainWindow):\n\nv2\\tests\\specification\\domain\\test_sequence_data_contract.py:23\n  F:\\CODE\\TKA\\tka-desktop\\modern\\tests\\specification\\domain\\test_sequence_data_contract.py:23: PytestUnknownMarkWarning: Unknown pytest.mark.specification - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.specification\n\nv2\\tests\\specification\\domain\\test_sequence_data_contract.py:24\n  F:\\CODE\\TKA\\tka-desktop\\modern\\tests\\specification\\domain\\test_sequence_data_contract.py:24: PytestUnknownMarkWarning: Unknown pytest.mark.critical - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.critical\n\nv2\\tests\\specification\\domain\\test_sequence_data_contract.py:107\n  F:\\CODE\\TKA\\tka-desktop\\modern\\tests\\specification\\domain\\test_sequence_data_contract.py:107: PytestUnknownMarkWarning: Unknown pytest.mark.specification - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.specification\n\nv2\\tests\\specification\\domain\\test_sequence_data_contract.py:108\n  F:\\CODE\\TKA\\tka-desktop\\modern\\tests\\specification\\domain\\test_sequence_data_contract.py:108: PytestUnknownMarkWarning: Unknown pytest.mark.critical - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.critical\n\nv2\\tests\\specification\\domain\\test_sequence_data_contract.py:152\n  F:\\CODE\\TKA\\tka-desktop\\modern\\tests\\specification\\domain\\test_sequence_data_contract.py:152: PytestUnknownMarkWarning: Unknown pytest.mark.specification - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.specification\n\nv2\\tests\\specification\\domain\\test_sequence_data_contract.py:153\n  F:\\CODE\\TKA\\tka-desktop\\modern\\tests\\specification\\domain\\test_sequence_data_contract.py:153: PytestUnknownMarkWarning: Unknown pytest.mark.critical - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.critical\n\nv2\\tests\\specification\\presentation\\test_option_picker.py:162\n  F:\\CODE\\TKA\\tka-desktop\\modern\\tests\\specification\\presentation\\test_option_picker.py:162: PytestCollectionWarning: cannot collect test class 'TestOptionPicker' because it has a __init__ constructor (from: specification/presentation/test_option_picker.py)\n    class TestOptionPicker(QWidget):\n\nv2\\tests\\specification\\presentation\\test_option_picker.py:297\n  F:\\CODE\\TKA\\tka-desktop\\modern\\tests\\specification\\presentation\\test_option_picker.py:297: PytestCollectionWarning: cannot collect test class 'TestWindow' because it has a __init__ constructor (from: specification/presentation/test_option_picker.py)\n    class TestWindow(QMainWindow):\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nERROR modern\\tests\\specification\\presentation\\test_graph_editor_legacy_parity.py\n!!!!!!!!!!!!!!!!!!! Interrupted: 1 error during collection !!!!!!!!!!!!!!!!!!!!\n================= 15 deselected, 9 warnings, 1 error in 0.22s =================\n",
      "stderr": "",
      "returncode": 2
    },
    "regression": {
      "status": "failed",
      "duration": 0.8559503555297852,
      "stdout": "============================= test session starts =============================\nplatform win32 -- Python 3.12.2, pytest-8.3.4, pluggy-1.5.0 -- C:\\Python312\\python.exe\ncachedir: .pytest_cache\nPyQt6 6.9.1 -- Qt runtime 6.9.1 -- Qt compiled 6.9.0\nrootdir: F:\\CODE\\TKA\\tka-desktop\\modern\\tests\nconfigfile: pytest.ini\nplugins: anyio-4.8.0, cov-6.1.1, mock-3.14.0, qt-4.4.0, sugar-1.0.0\ncollecting ... collected 6 items\n\nv2\\tests\\regression\\bugs\\test_sequence_clearing_crash_regression.py::TestSequenceClearingCrashRegression::test_clear_sequence_after_beat_addition_no_crash PASSED [ 16%]\nv2\\tests\\regression\\bugs\\test_sequence_clearing_crash_regression.py::TestSequenceClearingCrashRegression::test_multiple_sequence_operations_no_crash FAILED [ 33%]\nv2\\tests\\regression\\bugs\\test_sequence_clearing_crash_regression.py::TestSequenceClearingCrashRegression::test_construct_tab_workflow_no_crash PASSED [ 50%]\nv2\\tests\\regression\\bugs\\test_sequence_clearing_crash_regression.py::TestSequenceClearingCrashRegression::test_rapid_sequence_creation_and_clearing_no_memory_leak PASSED [ 66%]\nv2\\tests\\regression\\bugs\\test_sequence_clearing_crash_regression.py::TestSequenceClearingCrashRegression::test_sequence_state_consistency_after_operations PASSED [ 83%]\nv2\\tests\\regression\\bugs\\test_sequence_clearing_crash_regression.py::TestSequenceClearingCrashRegression::test_performance_regression_sequence_operations PASSED [100%]\n\n================================== FAILURES ===================================\n_ TestSequenceClearingCrashRegression.test_multiple_sequence_operations_no_crash _\nv2\\tests\\regression\\bugs\\test_sequence_clearing_crash_regression.py:70: in test_multiple_sequence_operations_no_crash\n    updated_sequence = self.SequenceData(beats=[beat1, beat2])\n<string>:9: in __init__\n    ???\nv2\\src\\domain\\models\\core_models.py:404: in __post_init__\n    raise ValueError(\nE   ValueError: Beat 1 has number 1, expected 2\n============================== warnings summary ===============================\nv2\\tests\\regression\\bugs\\test_sequence_clearing_crash_regression.py:24\n  F:\\CODE\\TKA\\tka-desktop\\modern\\tests\\regression\\bugs\\test_sequence_clearing_crash_regression.py:24: PytestUnknownMarkWarning: Unknown pytest.mark.regression - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.regression\n\nv2\\tests\\regression\\bugs\\test_sequence_clearing_crash_regression.py:25\n  F:\\CODE\\TKA\\tka-desktop\\modern\\tests\\regression\\bugs\\test_sequence_clearing_crash_regression.py:25: PytestUnknownMarkWarning: Unknown pytest.mark.critical - is this a typo?  You can register custom marks to avoid this warning - for details, see https://docs.pytest.org/en/stable/how-to/mark.html\n    @pytest.mark.critical\n\nregression/bugs/test_sequence_clearing_crash_regression.py::TestSequenceClearingCrashRegression::test_clear_sequence_after_beat_addition_no_crash\n  C:\\Python312\\Lib\\site-packages\\dateutil\\tz\\tz.py:37: DeprecationWarning: datetime.datetime.utcfromtimestamp() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.fromtimestamp(timestamp, datetime.UTC).\n    EPOCH = datetime.datetime.utcfromtimestamp(0)\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ===========================\nFAILED modern\\tests\\regression\\bugs\\test_sequence_clearing_crash_regression.py::TestSequenceClearingCrashRegression::test_multiple_sequence_operations_no_crash\n=================== 1 failed, 5 passed, 3 warnings in 0.47s ===================\n",
      "stderr": "",
      "returncode": 1
    },
    "integration": {
      "status": "failed",
      "duration": 0.5447616577148438,
      "stdout": "============================= test session starts =============================\nplatform win32 -- Python 3.12.2, pytest-8.3.4, pluggy-1.5.0 -- C:\\Python312\\python.exe\ncachedir: .pytest_cache\nPyQt6 6.9.1 -- Qt runtime 6.9.1 -- Qt compiled 6.9.0\nrootdir: F:\\CODE\\TKA\\tka-desktop\\modern\\tests\nconfigfile: pytest.ini\nplugins: anyio-4.8.0, cov-6.1.1, mock-3.14.0, qt-4.4.0, sugar-1.0.0\ncollecting ... collected 18 items / 2 errors / 18 deselected / 0 selected\n\n=================================== ERRORS ====================================\n____ ERROR collecting integration/workflows/test_beat_frame_integration.py ____\nImportError while importing test module 'F:\\CODE\\TKA\\tka-desktop\\modern\\tests\\integration\\workflows\\test_beat_frame_integration.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\nv2\\tests\\integration\\workflows\\test_beat_frame_integration.py:9: in <module>\n    from PyQt6.QtCore import QSignalSpy\nE   ImportError: cannot import name 'QSignalSpy' from 'PyQt6.QtCore' (C:\\Python312\\Lib\\site-packages\\PyQt6\\QtCore.pyd)\n___ ERROR collecting integration/workflows/test_graph_editor_integration.py ___\nImportError while importing test module 'F:\\CODE\\TKA\\tka-desktop\\modern\\tests\\integration\\workflows\\test_graph_editor_integration.py'.\nHint: make sure your test modules/packages have valid Python names.\nTraceback:\nC:\\Python312\\Lib\\importlib\\__init__.py:90: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\nv2\\tests\\integration\\workflows\\test_graph_editor_integration.py:9: in <module>\n    from PyQt6.QtCore import QSignalSpy, QTimer\nE   ImportError: cannot import name 'QSignalSpy' from 'PyQt6.QtCore' (C:\\Python312\\Lib\\site-packages\\PyQt6\\QtCore.pyd)\n=========================== short test summary info ===========================\nERROR modern\\tests\\integration\\workflows\\test_beat_frame_integration.py\nERROR modern\\tests\\integration\\workflows\\test_graph_editor_integration.py\n!!!!!!!!!!!!!!!!!!! Interrupted: 2 errors during collection !!!!!!!!!!!!!!!!!!!\n====================== 18 deselected, 2 errors in 0.18s =======================\n",
      "stderr": "",
      "returncode": 2
    }
  }
}
